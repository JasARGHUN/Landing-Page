@page "/users/edit/{UserId}"
@inject IUserRepository repository
@inject IJSRuntime js

<div class="form-inline">
    <select class="form-control mb-2 mr-sm-2" @bind="selectedRole">
        <option value="0">Select a role</option>
        @foreach (var role in roles)
        {
            <option value="@role.RoleName">@role.RoleName</option>
        }
    </select>

    <button class="btn btn-sm btn-warning mb-2 mr-sm-2" @onclick="AssignRole">Assign Role</button>
    <button class="btn btn-sm btn-danger mb-2 mr-sm-2" @onclick="RemoveRole">Remove Role</button>

</div>

@code
{
    [Parameter] public string UserId { get; set; }
    private List<RoleDTO> roles = new List<RoleDTO>();
    private string selectedRole = "0";

    protected override async Task OnInitializedAsync()
    {
        roles = await repository.GetRoles();
    }

    private async Task AssignRole()
    {
        if (selectedRole == "0")
        {
            await js.Confirm($"You must select a role");
            return;
        }

        await repository.AssignRole(new EditRoleDTO()
        {
            RoleName = selectedRole,
            UserId = UserId
        });
        await js.Confirm($"Role assigned");
    }

    private async Task RemoveRole()
    {
        if (selectedRole == "0")
        {
            await js.Confirm($"You must select a role");
            return;
        }

        await repository.RemoveRole(new EditRoleDTO()
        {
            RoleName = selectedRole,
            UserId = UserId
        });
        await js.Confirm($"Role removed");
    }
}
